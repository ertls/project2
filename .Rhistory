install.package(KernSmooth)
package.install(KernSmooth)
install.package("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
exit
q()
set.seed(1)
rpois(5,2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
x
e
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
getwd()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", acs.csv)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="acs.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="acs.csv", method=curl)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="acs.csv", method="curl")
acs <- read.csv("acs.csv")
View(acs)
acs[VAL==24]
acs[acs$VAL==24]
acs[acs$VAL=24]
acs[,acs$VAL==24]
acs$VAL
acs$VAL==24
acs[acs$VAL==24]
acs[[acs$VAL==24]]
acs[acs$VAL==24]
acs[acs$VAL==24,]
head acs[acs$VAL==24,]
head(acs[acs$VAL==24,])
first <- acs[acs$VAL==24,]
View(first)
val <- acs$VAL
val
valm <- val==24
sum(valm)
sum(!is.na(valm))
valm
val==24
val <- acs$VAL[!is.na(acs$VAL)]
val
val <- val[val==24]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "NGAP.xlsx", "curl")
library(xlsx)
load.package(xlsx)
download.package(xlsx)
download.packages(xlsx)
install.packages(xlsx)
install.packages("xlsx")
library(xlsx)
ngap <- read.xlsx("./NGAP.xlsx", sheetIndex=1, header=TRUE)
View(ngap)
colIndex <- c(18:23)
rowIndex <- c(7:15)
dat <- read.xlsx("./NGAP.xlsx", sheetIndex=1, colIndex=colIndex, rowIndex=rowIndex)
dat <- read.xlsx("NGAP.xlsx", sheetIndex=1, colIndex=colIndex, rowIndex=rowIndex)
dat <- read.xlsx("./NGAP.xlsx", sheetIndex=1)
dat <- read.xlsx("NGAP.xlsx", sheetIndex=1, colIndex=colIndex, rowIndex=rowIndex)
dat <- read.xlsx("NGAP.xlsx", sheetIndex=1, colIndex=colIndex, rowIndex=rowIndex, header=TRUE)
dat <- read.xlsx("NGAP.xlsx", sheetIndex=1, colIndex=colIndex, rowIndex=rowIndex, header=TRUE)
dat <- read.xlsx("NGAP.xlsx", sheetIndex=1, colIndex=18:23, rowIndex=7:15, header=TRUE)
dat <- read.xlsx("NGAP.xlsx", sheetIndex=1, header=TRUE)
View(dat)
dat <- read.xlsx("NGAP.xlsx", sheetIndex=1, header=TRUE, startRow=2)
View(dat)
dat <- dat(7:15,)
dat <- dat[7:15,]
View(dat)
dat <- read.xlsx("NGAP.xlsx", sheetIndex=1, header=TRUE, startRow=2)
dat <- dat[18:23,]
View(dat)
dat <- dat[,7:15]
View(dat)
dat <- read.xlsx("NGAP.xlsx", sheetIndex=1, header=TRUE, startRow=18)
View(dat)
dat <- dat[1:6,]
View(dat)
dat <- dat[1:5,]
View(dat)
dat <- dat[,7:15]
View(dat)
sum(dat$Zip*dat$Ext,na.rm=T)
sum(dat$Zip*dat$Ext)
sum(dat$Zip*dat$Ext,na.rm=TRUE)
dat <- read.xlsx("NGAP.xlsx", sheetIndex=1, colIndex=colIndex, rowIndex=rowIndex, header=TRUE)
dat <- read.xlsx("NGAP.xlsx", sheetIndex=1, colIndex=colIndex, rowIndex=rowIndex)
dat <- read.xlsx("NGAP.xlsx", sheetIndex=1, colIndex=colIndex, rowIndex=rowIndex, header=FALSE)
dat <- read.xlsx("getdata-data-DATA.gov_NGAP.xlsx", sheetIndex=1, colIndex=colIndex, rowIndex=rowIndex)
col <- 18:23
row <- 7:15
colIndex <- 7:15
rowIndex <- 18:23
dat <- read.xlsx("getdata-data-DATA.gov_NGAP.xlsx", sheetIndex=1, colIndex=colIndex, rowIndex=rowIndex)
View(dat)
sum(dat$Zip*dat$Ext,na.rm=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", "restaurants.xml", "curl")
install.packages("XML")
library(XML)
restaurants <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal=TRUE)
restaurants <- xmlTreeParse("restaurants.xml", useInternal=TRUE)
rootNode <- xmlRoot(restaurants)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
xmlSApply(rootNode,zipcode)
rootNode[[1]][[1]][[1]]
rootNode[[1]][[1]][[2]]
xmlSApply(rootNode,xmlValue)
xmlSApply(rootNode,"//zipcode",xmlValue)
xmlSApply(rootNode,"///zipcode",xmlValue)
restaurants
head(restaurants)
rootnode[[1]]
rootNode[[1]]
rootNode[[2]]
rootNode[[1]][[1]]
rootNode[[1]][[1]][[1]]
rootNode[[1]][[1]]
xmlSApply(rootNode,"//zipcode",xmlValue)
library(XML)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileURL, useInternalNodes = TRUE)
doc <- xmlTreeParse(fileURL, useInternal = TRUE)
doc <- xmlTreeParse("restaurants.xml", useInternalNodes = TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[2]]
rootNode[[1]][[1]]
rootNode[[1]][[1]][[1]]
rootNode[[1]][[1]][[2]]
xmlSApply(rootNode, xmlValue)
xmlSApply(rootNode, zipcode)
xpathSApply(rootNode, "//zipcode", xmlValue)
xpathSApply(rootNode, "//zipcode", xmlValue) == 21231
sum(xpathSApply(rootNode, "//zipcode", xmlValue) == 21231)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "acs2006.csv", "curl")
?fread
fread()
library(data.table)
install.packages("data.table")
library(data.table)
DF = data.frame("acs2006.csv")
View(DF)
?fread
fread("acs2006.csv")
dt = fread("acs2006.csv")
DT = fread("acs2006.csv")
View(DT)
head(DT$pwgtp15)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT$pwgtp15,by=DT$SEX))
mean(DT$pwgtp15,by=DT$SEX)
sytem.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(rowMeans(DT)[DT$SEX==1])
system.time(DT[,mean(pwgtp15),by=SEX])
DT[,mean(pwgtp15),by=SEX]
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT$pwgtp15,by=DT$SEX))
mean(DT$pwgtp15,by=DT$SEX)
install.packages("sqldf")
library(sqldf)
?sqldf
sqldf
getwd()
read.csv("getdata-data-ss06pid.csv")
acs <- read.csv("getdata-data-ss06pid.csv")
View(acs)
sqldf("select * from acs where AGEP < 50")
test <- sqldf("select * from acs where AGEP < 50")
View(test)
test <- sqldf("select pwgtp1 from acs where AGEP < 50")
View(test)
test <- unique(acs$AGEP)
test1 <- sqldf("select unique AGEP from acs")
test1 <- sqldf("select distinct AGEP from acs")
View(test1)
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readlines(con)
htmlCode <- readLines(con)
close(con)
head(htmlCode)
nchar(htmlCode[10])
nchar(htmlCode[c(10,20,30,100)]
)
forData <- read.table("getdata-wksst8110.for")
forData <- read.table("getdata-wksst8110.for")
forData <- read.table("getdata-wksst8110.for")
head(forData)
forData <- read.table("getdata-wksst8110.for", header=T)
View(forData)
head(forData)
sum(c(1,2,3))
sum(forData[,9])
sum(forData[,4])
library(datasets)
data(cars)
with(cars, plot(speed, dist))
plot(cars$speed, cars$dist)
library(ggplot2)
install.packages
install.packages("ggplot2")
library(ggplot2)
data(mpg)
qplot(displ, hwy, data = mpg)
library(lattice)
setwd("~/Google Drive/courses/Data Science/4. Exploratory Data Analysis/project2/exdata-data-NEI_data")
NEI <- readRDS("summarySCC_PM25.rds")
View(NEI)
tapply(NEI$Emissions, NEI$year, NEI$type, FUN = sum)
str(NEI)
tapply(NEI$Emissions, c(NEI$year, NEI$type), FUN = sum)
tapply(NEI$Emissions, NEI$year, FUN = sum)
tapply(NEI$Emissions, NEI$type, FUN = sum)
tapply(NEI$Emissions, list(NEI$year, NEI$type), FUN = sum)
plot(tapply(NEI$Emissions, list(NEI$year, NEI$type), FUN = sum))
library(ggplot2)
qplot(tapply(NEI$Emissions, list(NEI$year, NEI$type), FUN = sum))
solution
solution <- tapply(NEI$Emissions, list(NEI$year, NEI$type), FUN = sum)
solution
plot(solution)
solution
solution[1]
solution[1,]
solution[,1]
plot(solution[,1])
tapply(NEI$Emissions, list(NEI$year, NEI$type), FUN = sum)
View(solution)
solution$1999
solution["1999"]
solution[1999]
solution["1999",]
mode(solution)
str(solution)
solution
t(solution)
barplot(solution)
barplot(solution, beside=T)
plot(solution, beside=T)
plot(solution)
plot(t(solution)
)
plot(solution[,1])
points(solution[,2])
plot(solution[,1], geom="line")
plot(solution[,1], type="l")
warnings()
plot(solution[,1], type="l")
points(solution[,2], type="l", col="red")
solution[,2]
solution[,1]
plot(solution[,1], type="l")
points(solution[,2], type="l", col="red")
plot(solution[,1], type="l", col="red")
points(solution[,1], type="l", col="black")
plot(solution[,1], type="l", col="red")
points(solution[,2], type="l", col="black")
solutions
solution
min(solution)
max(solution)
plot(solution[,1], type="l", col="red")
par(yaxp=c(100000, 6000000))
par(yaxp=c(100000, 5600000, 56))
plot(solution[,1], type="l", col="red")
par(yaxp=c(100000, 5600000, 56))
par(yaxp=c(100000, 5600000, 10))
plot(solution[,1], type="l", col="red")
par(xaxp=c(100000, 5600000, 10))
plot(solution[,1], type="l", col="red")
par(xaxp=c(100000, 5600000, 1))
par(xaxp=c(100000, 5600000, 3))
par(yaxp=c(100000, 5600000, 3))
solution
min(solution)
max(solution)
plot(solution[,1], type="l", col="red")
points(solution[,2], type="l", col="black")
points(solution[,3], type="l", col="black")
points(solution[,4], type="l", col="black")
plot(solution[,2], type="l", col="red")
plot(solution[,3], type="l", col="red")
plot(solution[,4], type="l", col="red")
points(solution[,2], type="l", col="black")
